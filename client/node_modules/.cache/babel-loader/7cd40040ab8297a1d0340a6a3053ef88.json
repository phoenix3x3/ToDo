{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learning\\\\DevIncubator\\\\ToDo\\\\client\\\\src\\\\components\\\\Main\\\\Main.jsx\";\nimport React from \"react\";\nimport \"../../styles/main.sass\";\nimport { Card } from \"./Card\";\nimport uuid from \"uuid\";\nimport { Container, Media, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nexport class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [{\n        id: uuid(),\n        name: \"First Task\",\n        isCompleted: true\n      }, {\n        id: uuid(),\n        name: \"Second Task\",\n        isCompleted: false\n      }, {\n        id: uuid(),\n        name: \"Third Task\",\n        isCompleted: true\n      }, {\n        id: uuid(),\n        name: \"Fourth Task\",\n        isCompleted: false\n      }],\n      countToDo: 0,\n      countCompleted: 0\n    };\n  }\n\n  render() {\n    const items = this.state.items;\n    const countToDo = this.state.countToDo;\n    return React.createElement(\"section\", {\n      className: \"mainWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"To Do\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"mainWrapper__cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, items.filter(item => item.isCompleted).map(({\n      id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, name, \" \", React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: () => {\n        this.setState(state => ({\n          items: state.items.filter(item => item.id !== id)\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"\\xD7\")))))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Completed\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"mainWrapper__cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, items.filter(item => !item.isCompleted).map(({\n      id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"isCompleted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"far fa-check-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Completed!\"), name, \" \", React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: () => {\n        this.setState(state => ({\n          items: state.items.filter(item => item.id !== id)\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\xD7\"))))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Learning/DevIncubator/ToDo/client/src/components/Main/Main.jsx"],"names":["React","Card","uuid","Container","Media","ListGroup","ListGroupItem","Button","TransitionGroup","CSSTransition","Main","Component","state","items","id","name","isCompleted","countToDo","countCompleted","render","filter","item","map","setState"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../../styles/main.sass\";\r\nimport { Card } from \"./Card\";\r\n\r\nimport uuid from \"uuid\";\r\nimport { Container, Media, ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nexport class Main extends React.Component {\r\n  state = {\r\n    items: [\r\n      { id: uuid(), name: \"First Task\", isCompleted: true },\r\n      { id: uuid(), name: \"Second Task\", isCompleted: false },\r\n      { id: uuid(), name: \"Third Task\", isCompleted: true },\r\n      { id: uuid(), name: \"Fourth Task\", isCompleted: false }\r\n    ],\r\n    countToDo: 0,\r\n    countCompleted: 0\r\n  };\r\n  render() {\r\n    const { items } = this.state;\r\n    const { countToDo } = this.state;\r\n    return (\r\n      <section className=\"mainWrapper\">\r\n        <Container>\r\n          <h2>To Do</h2>\r\n\r\n          {/* make it in 1 component */}\r\n          <ListGroup>\r\n            <TransitionGroup className=\"mainWrapper__cards\">\r\n              {items\r\n                .filter(item => item.isCompleted)\r\n                .map(({ id, name }) => (\r\n                  <CSSTransition key={id} timeout={500} classNames=\"fade\">\r\n                    <ListGroupItem className=\"card\">\r\n                      {name}{\" \"}\r\n                      <Button\r\n                        className=\"remove-btn\"\r\n                        color=\"danger\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          this.setState(state => ({\r\n                            items: state.items.filter(item => item.id !== id)\r\n                          }));\r\n                        }}\r\n                      >\r\n                        &times;\r\n                      </Button>\r\n                    </ListGroupItem>\r\n                  </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n          </ListGroup>\r\n          <h2>Completed</h2>\r\n          <ListGroup>\r\n            <TransitionGroup className=\"mainWrapper__cards\">\r\n              {items\r\n                .filter(item => !item.isCompleted)\r\n                .map(({ id, name }) => (\r\n                  <CSSTransition key={id} timeout={500} classNames=\"fade\">\r\n                    <ListGroupItem className=\"card\">\r\n                      <div className=\"isCompleted\">\r\n                        <i class=\"far fa-check-circle\"></i>Completed!\r\n                      </div>\r\n                      {name}{\" \"}\r\n                      <Button\r\n                        className=\"remove-btn\"\r\n                        color=\"danger\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          this.setState(state => ({\r\n                            items: state.items.filter(item => item.id !== id)\r\n                          }));\r\n                        }}\r\n                      >\r\n                        &times;\r\n                      </Button>\r\n                    </ListGroupItem>\r\n                  </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n          </ListGroup>\r\n        </Container>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}